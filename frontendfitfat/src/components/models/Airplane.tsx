/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: scailman (https://sketchfab.com/scailman)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/low-poly-plane-76230052903540e9aeb46b7db35329e4
Title: Low Poly Plane
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Elevator_Plane_0: THREE.Mesh
    Propeller_Plane_0: THREE.Mesh
    Rudder_Plane_0: THREE.Mesh
    LeftAileron_Plane_0: THREE.Mesh
    RightAileron_Plane_0: THREE.Mesh
    Stabilizer_Plane_0: THREE.Mesh
    RightFlap_Plane_0: THREE.Mesh
    FrontWheel_Plane_0: THREE.Mesh
    RightWheel_Plane_0: THREE.Mesh
    LeftWheel_Plane_0: THREE.Mesh
    LeftFlap_Plane_0: THREE.Mesh
    Body_Plane_0: THREE.Mesh
  }
  materials: {
    Plane: THREE.MeshStandardMaterial
  }
}

export function Airplane (props: React.JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/scene.gltf') as unknown as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]}>
          <group name="LowPolyPlane01FBX" rotation={[Math.PI / 2, 0, 0]}>
            <group name="RootNode">
              <group name="Elevator" position={[0, -0.186, -3.36]} rotation={[-Math.PI / 2, 0, 0]}>
                <group name="Object_4" position={[1.137, -0.32, -0.05]}>
                  <mesh
                    name="Elevator_Plane_0"
                    castShadow
                    receiveShadow
                    geometry={nodes.Elevator_Plane_0.geometry}
                    material={materials.Plane}
                  />
                </group>
              </group>
              <group name="Propeller" position={[0, -0.194, 4.137]} rotation={[-Math.PI / 2, 0, 0]}>
                <group name="Object_7" position={[0, -1.327, 0.02]} rotation={[Math.PI / 2, 0, 0]}>
                  <mesh
                    name="Propeller_Plane_0"
                    castShadow
                    receiveShadow
                    geometry={nodes.Propeller_Plane_0.geometry}
                    material={materials.Plane}
                  />
                </group>
              </group>
              <group name="Rudder" position={[0, 0.583, -3.429]} rotation={[-Math.PI / 2, 0, 0]}>
                <group
                  name="Object_10"
                  position={[0, -3.429, -1.002]}
                  rotation={[Math.PI / 2, 0, 0]}>
                  <mesh
                    name="Rudder_Plane_0"
                    castShadow
                    receiveShadow
                    geometry={nodes.Rudder_Plane_0.geometry}
                    material={materials.Plane}
                  />
                </group>
              </group>
              <group
                name="LeftAileron"
                position={[4.117, 0.617, 0.956]}
                rotation={[-Math.PI / 2, 0, -0.175]}>
                <group
                  name="Object_13"
                  position={[-4.22, 0.227, -1.035]}
                  rotation={[Math.PI / 2, 0.175, 0]}>
                  <mesh
                    name="LeftAileron_Plane_0"
                    castShadow
                    receiveShadow
                    geometry={nodes.LeftAileron_Plane_0.geometry}
                    material={materials.Plane}
                  />
                </group>
              </group>
              <group
                name="RightAileron"
                position={[-4.228, 0.617, 0.947]}
                rotation={[-Math.PI / 2, 0, 0.175]}>
                <group
                  name="Object_16"
                  position={[4.329, 0.199, -1.036]}
                  rotation={[Math.PI / 2, -0.175, 0]}>
                  <mesh
                    name="RightAileron_Plane_0"
                    castShadow
                    receiveShadow
                    geometry={nodes.RightAileron_Plane_0.geometry}
                    material={materials.Plane}
                  />
                </group>
              </group>
              <group
                name="Stabilizer"
                position={[0, -0.186, -2.924]}
                rotation={[-Math.PI / 2, 0, 0]}>
                <group name="Object_19" position={[1.137, 0.115, -0.05]}>
                  <mesh
                    name="Stabilizer_Plane_0"
                    castShadow
                    receiveShadow
                    geometry={nodes.Stabilizer_Plane_0.geometry}
                    material={materials.Plane}
                  />
                </group>
              </group>
              <group
                name="RightFlap"
                position={[-1.838, 0.599, 0.762]}
                rotation={[-Math.PI / 2, 0, 0]}>
                <group
                  name="Object_22"
                  position={[1.838, 0.762, -1.017]}
                  rotation={[Math.PI / 2, 0, 0]}>
                  <mesh
                    name="RightFlap_Plane_0"
                    castShadow
                    receiveShadow
                    geometry={nodes.RightFlap_Plane_0.geometry}
                    material={materials.Plane}
                  />
                </group>
              </group>
              <group name="FrontWheel" position={[0, -1.22, 3.03]} rotation={[-Math.PI / 2, 0, 0]}>
                <group
                  name="Object_25"
                  position={[0.022, 0, 0]}
                  rotation={[Math.PI / 2, -Math.PI / 2, 0]}>
                  <mesh
                    name="FrontWheel_Plane_0"
                    castShadow
                    receiveShadow
                    geometry={nodes.FrontWheel_Plane_0.geometry}
                    material={materials.Plane}
                  />
                </group>
              </group>
              <group
                name="RightWheel"
                position={[-1.227, -1.22, 1.367]}
                rotation={[-Math.PI / 2, 0, 0]}>
                <group
                  name="Object_28"
                  position={[0.022, 0, 0]}
                  rotation={[Math.PI / 2, -Math.PI / 2, 0]}>
                  <mesh
                    name="RightWheel_Plane_0"
                    castShadow
                    receiveShadow
                    geometry={nodes.RightWheel_Plane_0.geometry}
                    material={materials.Plane}
                  />
                </group>
              </group>
              <group
                name="LeftWheel"
                position={[1.227, -1.22, 1.367]}
                rotation={[-Math.PI / 2, 0, 0]}>
                <group
                  name="Object_31"
                  position={[0.022, 0, 0]}
                  rotation={[Math.PI / 2, -Math.PI / 2, 0]}>
                  <mesh
                    name="LeftWheel_Plane_0"
                    castShadow
                    receiveShadow
                    geometry={nodes.LeftWheel_Plane_0.geometry}
                    material={materials.Plane}
                  />
                </group>
              </group>
              <group
                name="LeftFlap"
                position={[1.756, 0.599, 0.762]}
                rotation={[-Math.PI / 2, 0, 0]}>
                <group
                  name="Object_34"
                  position={[-1.756, 0.762, -1.017]}
                  rotation={[Math.PI / 2, 0, 0]}>
                  <mesh
                    name="LeftFlap_Plane_0"
                    castShadow
                    receiveShadow
                    geometry={nodes.LeftFlap_Plane_0.geometry}
                    material={materials.Plane}
                  />
                </group>
              </group>
              <group name="Body" position={[-0.041, -0.013, 0.104]} rotation={[-Math.PI / 2, 0, 0]}>
                <group
                  name="Object_37"
                  position={[0.041, 0.104, -0.406]}
                  rotation={[Math.PI / 2, 0, 0]}>
                  <mesh
                    name="Body_Plane_0"
                    castShadow
                    receiveShadow
                    geometry={nodes.Body_Plane_0.geometry}
                    material={materials.Plane}
                  />
                </group>
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/scene.gltf')
