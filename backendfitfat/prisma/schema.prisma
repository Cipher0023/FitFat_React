// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  email   String   @unique
  name    String
  password String
  postsMade   Post[]
  commentsMade Comment[]
  hightlightsAdded hightlight[]
  productsAdded product[]
}

model Post {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  title    String
  body     String
  author   User      @relation(fields: [authorId], references: [id])
  authorId String    @db.ObjectId
  comments Comment[]
  photo    String
}

model Comment {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  body     String
  author   User      @relation(fields: [authorId], references: [id])
  authorId String    @db.ObjectId
  post     Post      @relation(fields: [postId], references: [id])
  postId   String    @db.ObjectId
}

model hightlight {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  title    String
  body     String
  authorId String    @db.ObjectId
  author   User      @relation(fields: [authorId], references: [id])
  photo    String
}

model product {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  title    String
  body     String
  authorId String    @db.ObjectId
  author   User      @relation(fields: [authorId], references: [id])
  photo    String
  price    Float
  category String
}

